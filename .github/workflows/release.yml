name: Molecular Plus Release

on:
  push:
    tags:
      - "v*.*.*"  # Trigger release on version tags

jobs:
  build_windows:
    runs-on: windows-latest
    outputs:
      VERSION: ${{ steps.build.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10.6
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest cython
      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build with Cython
        id: build
        run: |
          $version = python pack_molecular.py
          echo "VERSION=${version}" >> $env:GITHUB_ENV
          echo "::set-output name=VERSION::${version}"
      - name: Upload windows zip
        uses: actions/upload-artifact@v4
        with:
          name: molecular-plus_${{ env.VERSION }}_310_win
          path: ./molecular-plus_${{ env.VERSION }}_310_win.zip

  build_windows41:
    runs-on: windows-latest
    outputs:
      VERSION: ${{ steps.build.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11.7
        uses: actions/setup-python@v3
        with:
          python-version: 3.11.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest cython
      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build with Cython
        id: build
        run: |
          $version = python pack_molecular.py
          echo "VERSION=${version}" >> $env:GITHUB_ENV
          echo "::set-output name=VERSION::${version}"
      - name: Upload windows zip
        uses: actions/upload-artifact@v4
        with:
          name: molecular-plus_${{ env.VERSION }}_311_win
          path: ./molecular-plus_${{ env.VERSION }}_311_win.zip

  build_linux:
    runs-on: ubuntu-22.04
    outputs:
      VERSION: ${{ steps.build.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10.12
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest cython
      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build with Cython
        id: build
        run: |
          version=$(python pack_molecular.py)
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "::set-output name=VERSION::${version}"
      - name: Upload linux zip
        uses: actions/upload-artifact@v4
        with:
          name: molecular-plus_${{ env.VERSION }}_310_linux
          path: ./molecular-plus_${{ env.VERSION }}_310_linux.zip

  build_linux41:
    runs-on: ubuntu-22.04
    outputs:
      VERSION: ${{ steps.build.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11.7
        uses: actions/setup-python@v3
        with:
          python-version: 3.11.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest cython
      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build with Cython
        id: build
        run: |
          version=$(python pack_molecular.py)
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "::set-output name=VERSION::${version}"
      - name: Upload linux zip
        uses: actions/upload-artifact@v4
        with:
          name: molecular-plus_${{ env.VERSION }}_311_linux
          path: ./molecular-plus_${{ env.VERSION }}_311_linux.zip

  build_macos41:
    runs-on: macos-14
    outputs:
      VERSION: ${{ steps.build.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11.7
        uses: actions/setup-python@v3
        with:
          python-version: 3.11.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest cython
      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build with Cython
        id: build
        run: |
          version=$(python pack_molecular.py)
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "::set-output name=VERSION::${version}"
      - name: Upload mac zip
        uses: actions/upload-artifact@v4
        with:
          name: molecular-plus_${{ env.VERSION }}_311_macos
          path: ./molecular-plus_${{ env.VERSION }}_311_macos.zip

  build_macos41_arm64:
    runs-on: macos-14
    outputs:
      VERSION: ${{ steps.build.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11.7
        uses: actions/setup-python@v3
        with:
          python-version: 3.11.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest cython
      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build with Cython
        id: build
        run: |
          version=$(python pack_molecular_arm64.py)
          echo "VERSION=${version}" >> $GITHUB_ENV
          echo "::set-output name=VERSION::${version}"
      - name: Upload mac zip
        uses: actions/upload-artifact@v4
        with:
          name: molecular-plus_${{ env.VERSION }}_311_macos_arm64
          path: ./molecular-plus_${{ env.VERSION }}_311_macos_arm64.zip

  release:
    runs-on: ubuntu-latest
    needs:
      - build_windows
      - build_windows41
      - build_linux
      - build_linux41
      - build_macos41
      - build_macos41_arm64
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Debug version
        run:
          echo "Version ${{ needs.build_windows.outputs.VERSION }}"

      - name: Download artifacts for Windows 310
        uses: actions/download-artifact@v4
        with:
          name: molecular-plus_${{ needs.build_windows.outputs.VERSION }}_310_win

      - name: Download artifacts for Windows 311
        uses: actions/download-artifact@v4
        with:
          name: molecular-plus_${{ needs.build_windows41.outputs.VERSION }}_311_win

      - name: Download artifacts for Linux 310
        uses: actions/download-artifact@v4
        with:
          name: molecular-plus_${{ needs.build_linux.outputs.VERSION }}_310_linux

      - name: Download artifacts for Linux 311
        uses: actions/download-artifact@v4
        with:
          name: molecular-plus_${{ needs.build_linux41.outputs.VERSION }}_311_linux

      - name: Download artifacts for macOS 311
        uses: actions/download-artifact@v4
        with:
          name: molecular-plus_${{ needs.build_macos41.outputs.VERSION }}_311_macos

      - name: Download artifacts for macOS 311 arm64
        uses: actions/download-artifact@v4
        with:
          name: molecular-plus_${{ needs.build_macos41.outputs.VERSION }}_311_macos_arm64

      - name: Create Release
        run: |
          tag=${GITHUB_REF#refs/tags/}
          gh release create "$tag" \
            molecular-plus_${{ needs.build_windows.outputs.VERSION }}_310_win.zip \
            molecular-plus_${{ needs.build_windows41.outputs.VERSION }}_311_win.zip \
            molecular-plus_${{ needs.build_linux.outputs.VERSION }}_310_linux.zip \
            molecular-plus_${{ needs.build_linux41.outputs.VERSION }}_311_linux.zip \
            molecular-plus_${{ needs.build_macos41.outputs.VERSION }}_311_macos.zip \
            molecular-plus_${{ needs.build_macos41.outputs.VERSION }}_311_macos_arm64.zip \
            --title "Release $tag" \
            --notes "Release of version $tag"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
